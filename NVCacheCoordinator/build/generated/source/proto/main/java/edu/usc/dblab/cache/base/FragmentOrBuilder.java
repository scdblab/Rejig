// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvcache.proto

package edu.usc.dblab.cache.base;

public interface FragmentOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nvcache.Fragment)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string physical_server = 1;</code>
   */
  java.lang.String getPhysicalServer();
  /**
   * <code>string physical_server = 1;</code>
   */
  com.google.protobuf.ByteString
      getPhysicalServerBytes();

  /**
   * <code>string migrate_server = 2;</code>
   */
  java.lang.String getMigrateServer();
  /**
   * <code>string migrate_server = 2;</code>
   */
  com.google.protobuf.ByteString
      getMigrateServerBytes();

  /**
   * <code>int32 fragment_id = 3;</code>
   */
  int getFragmentId();

  /**
   * <code>int32 prev_fragment_cfg_id = 4;</code>
   */
  int getPrevFragmentCfgId();

  /**
   * <code>int32 fragment_cfg_id = 5;</code>
   */
  int getFragmentCfgId();

  /**
   * <code>int32 next_fragment_cfg_id = 6;</code>
   */
  int getNextFragmentCfgId();

  /**
   * <code>.nvcache.Fragment.FragmentState state = 7;</code>
   */
  int getStateValue();
  /**
   * <code>.nvcache.Fragment.FragmentState state = 7;</code>
   */
  edu.usc.dblab.cache.base.Fragment.FragmentState getState();

  /**
   * <code>double frequency = 8;</code>
   */
  double getFrequency();

  /**
   * <code>repeated .nvcache.Range range = 9;</code>
   */
  java.util.List<edu.usc.dblab.cache.base.Range> 
      getRangeList();
  /**
   * <code>repeated .nvcache.Range range = 9;</code>
   */
  edu.usc.dblab.cache.base.Range getRange(int index);
  /**
   * <code>repeated .nvcache.Range range = 9;</code>
   */
  int getRangeCount();
  /**
   * <code>repeated .nvcache.Range range = 9;</code>
   */
  java.util.List<? extends edu.usc.dblab.cache.base.RangeOrBuilder> 
      getRangeOrBuilderList();
  /**
   * <code>repeated .nvcache.Range range = 9;</code>
   */
  edu.usc.dblab.cache.base.RangeOrBuilder getRangeOrBuilder(
      int index);
}
