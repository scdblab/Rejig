// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvcache.proto

package edu.usc.dblab.cache.base;

/**
 * Protobuf type {@code nvcache.AssignmentConfiguration}
 */
public  final class AssignmentConfiguration extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:nvcache.AssignmentConfiguration)
    AssignmentConfigurationOrBuilder {
  // Use AssignmentConfiguration.newBuilder() to construct.
  private AssignmentConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AssignmentConfiguration() {
    configNumber_ = 0;
    fragments_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private AssignmentConfiguration(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            configNumber_ = input.readInt32();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              fragments_ = new java.util.ArrayList<edu.usc.dblab.cache.base.Fragment>();
              mutable_bitField0_ |= 0x00000002;
            }
            fragments_.add(
                input.readMessage(edu.usc.dblab.cache.base.Fragment.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              serverStateMap_ = com.google.protobuf.MapField.newMapField(
                  ServerStateMapDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
            serverStateMap__ = input.readMessage(
                ServerStateMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            serverStateMap_.getMutableMap().put(
                serverStateMap__.getKey(), serverStateMap__.getValue());
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        fragments_ = java.util.Collections.unmodifiableList(fragments_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return edu.usc.dblab.cache.base.CacheProto.internal_static_nvcache_AssignmentConfiguration_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 3:
        return internalGetServerStateMap();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return edu.usc.dblab.cache.base.CacheProto.internal_static_nvcache_AssignmentConfiguration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            edu.usc.dblab.cache.base.AssignmentConfiguration.class, edu.usc.dblab.cache.base.AssignmentConfiguration.Builder.class);
  }

  /**
   * Protobuf enum {@code nvcache.AssignmentConfiguration.ServerState}
   */
  public enum ServerState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NORMAL = 0;</code>
     */
    NORMAL(0),
    /**
     * <code>MIGRATION = 1;</code>
     */
    MIGRATION(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NORMAL = 0;</code>
     */
    public static final int NORMAL_VALUE = 0;
    /**
     * <code>MIGRATION = 1;</code>
     */
    public static final int MIGRATION_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ServerState valueOf(int value) {
      return forNumber(value);
    }

    public static ServerState forNumber(int value) {
      switch (value) {
        case 0: return NORMAL;
        case 1: return MIGRATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ServerState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ServerState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ServerState>() {
            public ServerState findValueByNumber(int number) {
              return ServerState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.usc.dblab.cache.base.AssignmentConfiguration.getDescriptor().getEnumTypes().get(0);
    }

    private static final ServerState[] VALUES = values();

    public static ServerState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ServerState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:nvcache.AssignmentConfiguration.ServerState)
  }

  private int bitField0_;
  public static final int CONFIG_NUMBER_FIELD_NUMBER = 1;
  private int configNumber_;
  /**
   * <code>int32 config_number = 1;</code>
   */
  public int getConfigNumber() {
    return configNumber_;
  }

  public static final int FRAGMENTS_FIELD_NUMBER = 2;
  private java.util.List<edu.usc.dblab.cache.base.Fragment> fragments_;
  /**
   * <code>repeated .nvcache.Fragment fragments = 2;</code>
   */
  public java.util.List<edu.usc.dblab.cache.base.Fragment> getFragmentsList() {
    return fragments_;
  }
  /**
   * <code>repeated .nvcache.Fragment fragments = 2;</code>
   */
  public java.util.List<? extends edu.usc.dblab.cache.base.FragmentOrBuilder> 
      getFragmentsOrBuilderList() {
    return fragments_;
  }
  /**
   * <code>repeated .nvcache.Fragment fragments = 2;</code>
   */
  public int getFragmentsCount() {
    return fragments_.size();
  }
  /**
   * <code>repeated .nvcache.Fragment fragments = 2;</code>
   */
  public edu.usc.dblab.cache.base.Fragment getFragments(int index) {
    return fragments_.get(index);
  }
  /**
   * <code>repeated .nvcache.Fragment fragments = 2;</code>
   */
  public edu.usc.dblab.cache.base.FragmentOrBuilder getFragmentsOrBuilder(
      int index) {
    return fragments_.get(index);
  }

  public static final int SERVER_STATE_MAP_FIELD_NUMBER = 3;
  private static final class ServerStateMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                edu.usc.dblab.cache.base.CacheProto.internal_static_nvcache_AssignmentConfiguration_ServerStateMapEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.ENUM,
                edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState.NORMAL.getNumber());
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> serverStateMap_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetServerStateMap() {
    if (serverStateMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ServerStateMapDefaultEntryHolder.defaultEntry);
    }
    return serverStateMap_;
  }
  private static final
  com.google.protobuf.Internal.MapAdapter.Converter<
      java.lang.Integer, edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState> serverStateMapValueConverter =
          com.google.protobuf.Internal.MapAdapter.newEnumConverter(
              edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState.internalGetValueMap(),
              edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState.UNRECOGNIZED);
  private static final java.util.Map<java.lang.String, edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState>
  internalGetAdaptedServerStateMapMap(
      java.util.Map<java.lang.String, java.lang.Integer> map) {
    return new com.google.protobuf.Internal.MapAdapter<
        java.lang.String, edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState, java.lang.Integer>(
            map, serverStateMapValueConverter);
  }

  public int getServerStateMapCount() {
    return internalGetServerStateMap().getMap().size();
  }
  /**
   * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
   */

  public boolean containsServerStateMap(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetServerStateMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getServerStateMapMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState>
  getServerStateMap() {
    return getServerStateMapMap();
  }
  /**
   * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
   */

  public java.util.Map<java.lang.String, edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState>
  getServerStateMapMap() {
    return internalGetAdaptedServerStateMapMap(
        internalGetServerStateMap().getMap());}
  /**
   * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
   */

  public edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState getServerStateMapOrDefault(
      java.lang.String key,
      edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetServerStateMap().getMap();
    return map.containsKey(key)
           ? serverStateMapValueConverter.doForward(map.get(key))
           : defaultValue;
  }
  /**
   * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
   */

  public edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState getServerStateMapOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetServerStateMap().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return serverStateMapValueConverter.doForward(map.get(key));
  }
  /**
   * Use {@link #getServerStateMapValueMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer>
  getServerStateMapValue() {
    return getServerStateMapValueMap();
  }
  /**
   * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
   */

  public java.util.Map<java.lang.String, java.lang.Integer>
  getServerStateMapValueMap() {
    return internalGetServerStateMap().getMap();
  }
  /**
   * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
   */

  public int getServerStateMapValueOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetServerStateMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
   */

  public int getServerStateMapValueOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetServerStateMap().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (configNumber_ != 0) {
      output.writeInt32(1, configNumber_);
    }
    for (int i = 0; i < fragments_.size(); i++) {
      output.writeMessage(2, fragments_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetServerStateMap(),
        ServerStateMapDefaultEntryHolder.defaultEntry,
        3);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (configNumber_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, configNumber_);
    }
    for (int i = 0; i < fragments_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, fragments_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetServerStateMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      serverStateMap__ = ServerStateMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, serverStateMap__);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof edu.usc.dblab.cache.base.AssignmentConfiguration)) {
      return super.equals(obj);
    }
    edu.usc.dblab.cache.base.AssignmentConfiguration other = (edu.usc.dblab.cache.base.AssignmentConfiguration) obj;

    boolean result = true;
    result = result && (getConfigNumber()
        == other.getConfigNumber());
    result = result && getFragmentsList()
        .equals(other.getFragmentsList());
    result = result && internalGetServerStateMap().equals(
        other.internalGetServerStateMap());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CONFIG_NUMBER_FIELD_NUMBER;
    hash = (53 * hash) + getConfigNumber();
    if (getFragmentsCount() > 0) {
      hash = (37 * hash) + FRAGMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getFragmentsList().hashCode();
    }
    if (!internalGetServerStateMap().getMap().isEmpty()) {
      hash = (37 * hash) + SERVER_STATE_MAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetServerStateMap().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static edu.usc.dblab.cache.base.AssignmentConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(edu.usc.dblab.cache.base.AssignmentConfiguration prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code nvcache.AssignmentConfiguration}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nvcache.AssignmentConfiguration)
      edu.usc.dblab.cache.base.AssignmentConfigurationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.usc.dblab.cache.base.CacheProto.internal_static_nvcache_AssignmentConfiguration_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetServerStateMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableServerStateMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.usc.dblab.cache.base.CacheProto.internal_static_nvcache_AssignmentConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.usc.dblab.cache.base.AssignmentConfiguration.class, edu.usc.dblab.cache.base.AssignmentConfiguration.Builder.class);
    }

    // Construct using edu.usc.dblab.cache.base.AssignmentConfiguration.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFragmentsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      configNumber_ = 0;

      if (fragmentsBuilder_ == null) {
        fragments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        fragmentsBuilder_.clear();
      }
      internalGetMutableServerStateMap().clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return edu.usc.dblab.cache.base.CacheProto.internal_static_nvcache_AssignmentConfiguration_descriptor;
    }

    public edu.usc.dblab.cache.base.AssignmentConfiguration getDefaultInstanceForType() {
      return edu.usc.dblab.cache.base.AssignmentConfiguration.getDefaultInstance();
    }

    public edu.usc.dblab.cache.base.AssignmentConfiguration build() {
      edu.usc.dblab.cache.base.AssignmentConfiguration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public edu.usc.dblab.cache.base.AssignmentConfiguration buildPartial() {
      edu.usc.dblab.cache.base.AssignmentConfiguration result = new edu.usc.dblab.cache.base.AssignmentConfiguration(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.configNumber_ = configNumber_;
      if (fragmentsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          fragments_ = java.util.Collections.unmodifiableList(fragments_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.fragments_ = fragments_;
      } else {
        result.fragments_ = fragmentsBuilder_.build();
      }
      result.serverStateMap_ = internalGetServerStateMap();
      result.serverStateMap_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof edu.usc.dblab.cache.base.AssignmentConfiguration) {
        return mergeFrom((edu.usc.dblab.cache.base.AssignmentConfiguration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(edu.usc.dblab.cache.base.AssignmentConfiguration other) {
      if (other == edu.usc.dblab.cache.base.AssignmentConfiguration.getDefaultInstance()) return this;
      if (other.getConfigNumber() != 0) {
        setConfigNumber(other.getConfigNumber());
      }
      if (fragmentsBuilder_ == null) {
        if (!other.fragments_.isEmpty()) {
          if (fragments_.isEmpty()) {
            fragments_ = other.fragments_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFragmentsIsMutable();
            fragments_.addAll(other.fragments_);
          }
          onChanged();
        }
      } else {
        if (!other.fragments_.isEmpty()) {
          if (fragmentsBuilder_.isEmpty()) {
            fragmentsBuilder_.dispose();
            fragmentsBuilder_ = null;
            fragments_ = other.fragments_;
            bitField0_ = (bitField0_ & ~0x00000002);
            fragmentsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFragmentsFieldBuilder() : null;
          } else {
            fragmentsBuilder_.addAllMessages(other.fragments_);
          }
        }
      }
      internalGetMutableServerStateMap().mergeFrom(
          other.internalGetServerStateMap());
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      edu.usc.dblab.cache.base.AssignmentConfiguration parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (edu.usc.dblab.cache.base.AssignmentConfiguration) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int configNumber_ ;
    /**
     * <code>int32 config_number = 1;</code>
     */
    public int getConfigNumber() {
      return configNumber_;
    }
    /**
     * <code>int32 config_number = 1;</code>
     */
    public Builder setConfigNumber(int value) {
      
      configNumber_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 config_number = 1;</code>
     */
    public Builder clearConfigNumber() {
      
      configNumber_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<edu.usc.dblab.cache.base.Fragment> fragments_ =
      java.util.Collections.emptyList();
    private void ensureFragmentsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        fragments_ = new java.util.ArrayList<edu.usc.dblab.cache.base.Fragment>(fragments_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        edu.usc.dblab.cache.base.Fragment, edu.usc.dblab.cache.base.Fragment.Builder, edu.usc.dblab.cache.base.FragmentOrBuilder> fragmentsBuilder_;

    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public java.util.List<edu.usc.dblab.cache.base.Fragment> getFragmentsList() {
      if (fragmentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fragments_);
      } else {
        return fragmentsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public int getFragmentsCount() {
      if (fragmentsBuilder_ == null) {
        return fragments_.size();
      } else {
        return fragmentsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public edu.usc.dblab.cache.base.Fragment getFragments(int index) {
      if (fragmentsBuilder_ == null) {
        return fragments_.get(index);
      } else {
        return fragmentsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public Builder setFragments(
        int index, edu.usc.dblab.cache.base.Fragment value) {
      if (fragmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFragmentsIsMutable();
        fragments_.set(index, value);
        onChanged();
      } else {
        fragmentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public Builder setFragments(
        int index, edu.usc.dblab.cache.base.Fragment.Builder builderForValue) {
      if (fragmentsBuilder_ == null) {
        ensureFragmentsIsMutable();
        fragments_.set(index, builderForValue.build());
        onChanged();
      } else {
        fragmentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public Builder addFragments(edu.usc.dblab.cache.base.Fragment value) {
      if (fragmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFragmentsIsMutable();
        fragments_.add(value);
        onChanged();
      } else {
        fragmentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public Builder addFragments(
        int index, edu.usc.dblab.cache.base.Fragment value) {
      if (fragmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFragmentsIsMutable();
        fragments_.add(index, value);
        onChanged();
      } else {
        fragmentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public Builder addFragments(
        edu.usc.dblab.cache.base.Fragment.Builder builderForValue) {
      if (fragmentsBuilder_ == null) {
        ensureFragmentsIsMutable();
        fragments_.add(builderForValue.build());
        onChanged();
      } else {
        fragmentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public Builder addFragments(
        int index, edu.usc.dblab.cache.base.Fragment.Builder builderForValue) {
      if (fragmentsBuilder_ == null) {
        ensureFragmentsIsMutable();
        fragments_.add(index, builderForValue.build());
        onChanged();
      } else {
        fragmentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public Builder addAllFragments(
        java.lang.Iterable<? extends edu.usc.dblab.cache.base.Fragment> values) {
      if (fragmentsBuilder_ == null) {
        ensureFragmentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fragments_);
        onChanged();
      } else {
        fragmentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public Builder clearFragments() {
      if (fragmentsBuilder_ == null) {
        fragments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        fragmentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public Builder removeFragments(int index) {
      if (fragmentsBuilder_ == null) {
        ensureFragmentsIsMutable();
        fragments_.remove(index);
        onChanged();
      } else {
        fragmentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public edu.usc.dblab.cache.base.Fragment.Builder getFragmentsBuilder(
        int index) {
      return getFragmentsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public edu.usc.dblab.cache.base.FragmentOrBuilder getFragmentsOrBuilder(
        int index) {
      if (fragmentsBuilder_ == null) {
        return fragments_.get(index);  } else {
        return fragmentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public java.util.List<? extends edu.usc.dblab.cache.base.FragmentOrBuilder> 
         getFragmentsOrBuilderList() {
      if (fragmentsBuilder_ != null) {
        return fragmentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fragments_);
      }
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public edu.usc.dblab.cache.base.Fragment.Builder addFragmentsBuilder() {
      return getFragmentsFieldBuilder().addBuilder(
          edu.usc.dblab.cache.base.Fragment.getDefaultInstance());
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public edu.usc.dblab.cache.base.Fragment.Builder addFragmentsBuilder(
        int index) {
      return getFragmentsFieldBuilder().addBuilder(
          index, edu.usc.dblab.cache.base.Fragment.getDefaultInstance());
    }
    /**
     * <code>repeated .nvcache.Fragment fragments = 2;</code>
     */
    public java.util.List<edu.usc.dblab.cache.base.Fragment.Builder> 
         getFragmentsBuilderList() {
      return getFragmentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        edu.usc.dblab.cache.base.Fragment, edu.usc.dblab.cache.base.Fragment.Builder, edu.usc.dblab.cache.base.FragmentOrBuilder> 
        getFragmentsFieldBuilder() {
      if (fragmentsBuilder_ == null) {
        fragmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            edu.usc.dblab.cache.base.Fragment, edu.usc.dblab.cache.base.Fragment.Builder, edu.usc.dblab.cache.base.FragmentOrBuilder>(
                fragments_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        fragments_ = null;
      }
      return fragmentsBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> serverStateMap_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetServerStateMap() {
      if (serverStateMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ServerStateMapDefaultEntryHolder.defaultEntry);
      }
      return serverStateMap_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetMutableServerStateMap() {
      onChanged();;
      if (serverStateMap_ == null) {
        serverStateMap_ = com.google.protobuf.MapField.newMapField(
            ServerStateMapDefaultEntryHolder.defaultEntry);
      }
      if (!serverStateMap_.isMutable()) {
        serverStateMap_ = serverStateMap_.copy();
      }
      return serverStateMap_;
    }

    public int getServerStateMapCount() {
      return internalGetServerStateMap().getMap().size();
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */

    public boolean containsServerStateMap(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetServerStateMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getServerStateMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState>
    getServerStateMap() {
      return getServerStateMapMap();
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */

    public java.util.Map<java.lang.String, edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState>
    getServerStateMapMap() {
      return internalGetAdaptedServerStateMapMap(
          internalGetServerStateMap().getMap());}
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */

    public edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState getServerStateMapOrDefault(
        java.lang.String key,
        edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetServerStateMap().getMap();
      return map.containsKey(key)
             ? serverStateMapValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */

    public edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState getServerStateMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetServerStateMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return serverStateMapValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getServerStateMapValueMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getServerStateMapValue() {
      return getServerStateMapValueMap();
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer>
    getServerStateMapValueMap() {
      return internalGetServerStateMap().getMap();
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */

    public int getServerStateMapValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetServerStateMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */

    public int getServerStateMapValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetServerStateMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearServerStateMap() {
      internalGetMutableServerStateMap().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */

    public Builder removeServerStateMap(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableServerStateMap().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState>
    getMutableServerStateMap() {
      return internalGetAdaptedServerStateMapMap(
           internalGetMutableServerStateMap().getMutableMap());
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */
    public Builder putServerStateMap(
        java.lang.String key,
        edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableServerStateMap().getMutableMap()
          .put(key, serverStateMapValueConverter.doBackward(value));
      return this;
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */
    public Builder putAllServerStateMap(
        java.util.Map<java.lang.String, edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState> values) {
      internalGetAdaptedServerStateMapMap(
          internalGetMutableServerStateMap().getMutableMap())
              .putAll(values);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutableServerStateMapValue() {
      return internalGetMutableServerStateMap().getMutableMap();
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */
    public Builder putServerStateMapValue(
        java.lang.String key,
        int value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (edu.usc.dblab.cache.base.AssignmentConfiguration.ServerState.forNumber(value) == null) {
        throw new java.lang.IllegalArgumentException();
      }
      internalGetMutableServerStateMap().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .nvcache.AssignmentConfiguration.ServerState&gt; server_state_map = 3;</code>
     */
    public Builder putAllServerStateMapValue(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      internalGetMutableServerStateMap().getMutableMap()
          .putAll(values);
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:nvcache.AssignmentConfiguration)
  }

  // @@protoc_insertion_point(class_scope:nvcache.AssignmentConfiguration)
  private static final edu.usc.dblab.cache.base.AssignmentConfiguration DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new edu.usc.dblab.cache.base.AssignmentConfiguration();
  }

  public static edu.usc.dblab.cache.base.AssignmentConfiguration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AssignmentConfiguration>
      PARSER = new com.google.protobuf.AbstractParser<AssignmentConfiguration>() {
    public AssignmentConfiguration parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new AssignmentConfiguration(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AssignmentConfiguration> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AssignmentConfiguration> getParserForType() {
    return PARSER;
  }

  public edu.usc.dblab.cache.base.AssignmentConfiguration getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

