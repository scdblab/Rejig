// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvcache.proto

package edu.usc.dblab.cache.base;

public interface WorkloadConfigurationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nvcache.WorkloadConfiguration)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int32 config_number = 1;</code>
   */
  int getConfigNumber();

  /**
   * <code>.nvcache.WorkloadConfiguration.Workload workload = 2;</code>
   */
  int getWorkloadValue();
  /**
   * <code>.nvcache.WorkloadConfiguration.Workload workload = 2;</code>
   */
  edu.usc.dblab.cache.base.WorkloadConfiguration.Workload getWorkload();

  /**
   * <code>int32 base = 3;</code>
   */
  int getBase();

  /**
   * <code>int32 max = 4;</code>
   */
  int getMax();

  /**
   * <code>int32 param1 = 5;</code>
   */
  int getParam1();

  /**
   * <code>int32 param2 = 6;</code>
   */
  int getParam2();

  /**
   * <code>repeated .nvcache.Fragment fragments = 7;</code>
   */
  java.util.List<edu.usc.dblab.cache.base.Fragment> 
      getFragmentsList();
  /**
   * <code>repeated .nvcache.Fragment fragments = 7;</code>
   */
  edu.usc.dblab.cache.base.Fragment getFragments(int index);
  /**
   * <code>repeated .nvcache.Fragment fragments = 7;</code>
   */
  int getFragmentsCount();
  /**
   * <code>repeated .nvcache.Fragment fragments = 7;</code>
   */
  java.util.List<? extends edu.usc.dblab.cache.base.FragmentOrBuilder> 
      getFragmentsOrBuilderList();
  /**
   * <code>repeated .nvcache.Fragment fragments = 7;</code>
   */
  edu.usc.dblab.cache.base.FragmentOrBuilder getFragmentsOrBuilder(
      int index);
}
